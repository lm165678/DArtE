FUNCTION BLOCK

VAR_INPUT
angle_target_Bip01$R$Clavicle@1:REAL;
angle_target_Bip01$R$Clavicle@2:REAL;
angle_target_Bip01$R$UpperArm@1:REAL;
angle_current_Bip01$R$UpperArm@2:REAL;
angle_target_Bip01$R$UpperArm@2:REAL;
angle_target_RightShoulderJointZ:REAL;
angle_target_Bip01$R$Forearm:REAL;
angle_alignment2_rightForeArmJointX:REAL;
angle_alignment2_Bip01$R$Hand:REAL;
angle_alignment1_rightWristJointY:REAL;
angle_target_Bip01$Spine1@1:REAL;
angle_target_Bip01$Spine1@2:REAL;
angle_target_Bip01$Neck@1:REAL;
angle_target_Bip01$Neck@2:REAL;
END_VAR

FUZZIFY angle_target_Bip01$R$UpperArm@1
TERMS := (farleft,left,#at,right,farright):(-60 -1.0 -0.8 0.8 1.0 60)
END_FUZZIFY

FUZZIFY angle_current_Bip01$R$UpperArm@2
TERMS := (left,#at,right):(-20 -19 44 45)
END_FUZZIFY

FUZZIFY angle_target_Bip01$R$UpperArm@2
TERMS := (left,#at,right):(-4 -3.9 3.9 4.0)
END_FUZZIFY

FUZZIFY angle_target_Bip01$R$Clavicle@1
TERMS := (farleft,left,#at,right,farright):(-60 -1.0 -0.8 0.8 1.0 60)
END_FUZZIFY

FUZZIFY angle_target_Bip01$R$Clavicle@2
TERMS := (farleft,left,#at,right,farright):(-60 -1.0 -0.8 0.8 1.0 60)
END_FUZZIFY

FUZZIFY angle_target_Bip01$R$Forearm
TERMS := (farleft,left,#at,right,farright):(-60 -1.0 -0.1 0.1 1.0 60)
END_FUZZIFY

FUZZIFY angle_target_RightShoulderJointZ
TERMS := (farleft,left,#at,right,farright):(-60 -3 -1.5 1.5 3 60)
END_FUZZIFY

FUZZIFY angle_alignment2_rightForeArmJointX
TERMS := (farleft,left,#at,right,farright):(-60 -3.0 -0.1 0.1 3.0 60)
END_FUZZIFY

FUZZIFY angle_alignment1_rightWristJointY
TERMS := (farleft,left,#at,right,farright):(-60 -1.0 -0.5 0.5 1.0 60)
END_FUZZIFY

FUZZIFY angle_alignment2_Bip01$R$Hand
TERMS := (farleft,left,#at,right,farright):(-60 -1.0 -0.5 0.5 1.0 60)
END_FUZZIFY

FUZZIFY angle_target_Bip01$Spine1@1
TERMS := (farleft,left,#at,right,farright):(-60 -2 -1.9 1.9 2.0 60)
END_FUZZIFY

FUZZIFY angle_target_Bip01$Spine1@2
TERMS := (farleft,left,#at,right,farright):(-60 -2 -1.9 1.9 2.0 60)
END_FUZZIFY

FUZZIFY angle_target_Bip01$Neck@1
TERMS := (farleft,left,#at,right,farright):(-60 -3 -2.9 2.9 3 60)
END_FUZZIFY

FUZZIFY angle_target_Bip01$Neck@2
TERMS := (farleft,left,#at,right,farright):(-60 -3 -2.9 2.9 3 60)
END_FUZZIFY

VAR_OUTPUT
dangle_Bip01$R$Clavicle@1:REAL;
dangle_Bip01$R$Clavicle@2:REAL;
dangle_Bip01$R$UpperArm@1:REAL;
dangle_Bip01$R$UpperArm@2:REAL;
dangle_RightShoulderJointZ:REAL;
dangle_Bip01$R$Forearm:REAL;
dangle_rightForeArmJointX:REAL;
dangle_Bip01$R$Hand:REAL;
dangle_rightWristJointY:REAL;
dangle_Bip01$Spine1@1:REAL;
dangle_Bip01$Spine1@2:REAL;
dangle_Bip01$Neck@1:REAL;
dangle_Bip01$Neck@2:REAL;
END_VAR

DEFUZZIFY dangle_Bip01$R$Clavicle@1
TERM turnrightfast := 50
TERM turnright := 2.5
TERM stay := 0.0
TERM turnleft := -2.5
TERM turnleftfast := -50
END_DEFUZZIFY

DEFUZZIFY dangle_Bip01$R$Clavicle@2
TERM turnrightfast := 50
TERM turnright := 2.5
TERM stay := 0.0
TERM turnleft := -2.5
TERM turnleftfast := -50
END_DEFUZZIFY

DEFUZZIFY dangle_Bip01$R$UpperArm@1
TERM turnrightfast := 160
TERM turnright := 80
TERM turnrightslow := 10
TERM stay := 0.0
TERM turnleftslow := -10
TERM turnleft := -80
TERM turnleftfast := -160
END_DEFUZZIFY

DEFUZZIFY dangle_Bip01$R$UpperArm@2
TERM turnrightfast := 200
TERM turnright := 80
TERM turnrightslow := 25
TERM stay := 0.0
TERM turnleftslow := -25
TERM turnleft := -80
TERM turnleftfast := -200
END_DEFUZZIFY

DEFUZZIFY dangle_RightShoulderJointZ
TERM turnrightfast := 200
TERM turnright := 100
TERM stay := 0.0
TERM turnleft := -100
TERM turnleftfast := -200
END_DEFUZZIFY

DEFUZZIFY dangle_Bip01$R$Forearm
TERM turnrightfast := 160.0
TERM turnright := 80
TERM stay := 0.0
TERM turnleft := -80
TERM turnleftfast := -160.0
END_DEFUZZIFY

DEFUZZIFY dangle_rightForeArmJointX
TERM turnrightfast := 200
TERM turnright := 50
TERM stay := 0.0
TERM turnleft := -50
TERM turnleftfast := -200
END_DEFUZZIFY

DEFUZZIFY dangle_Bip01$R$Hand
TERM turnrightfast := 200
TERM turnright := 40
TERM stay := 0.0
TERM turnleft := -40
TERM turnleftfast := -200
END_DEFUZZIFY

DEFUZZIFY dangle_rightWristJointY
TERM turnrightfast := 300.0
TERM turnright := 60
TERM stay := 0.0
TERM turnleft := -60
TERM turnleftfast := -300.0
END_DEFUZZIFY

DEFUZZIFY dangle_Bip01$Spine1@1
TERM turnrightfast := 5
TERM turnright := 1
TERM stay := 0.0
TERM turnleft := -1
TERM turnleftfast := -5
END_DEFUZZIFY

DEFUZZIFY dangle_Bip01$Spine1@2
TERM turnrightfast := 50
TERM turnright := 5
TERM stay := 0.0
TERM turnleft := -5
TERM turnleftfast := -50
END_DEFUZZIFY

DEFUZZIFY dangle_Bip01$Neck@1
TERM turnrightfast := 5
TERM turnright := 1
TERM stay := 0.0
TERM turnleft := -1
TERM turnleftfast := -5
END_DEFUZZIFY

DEFUZZIFY dangle_Bip01$Neck@2
TERM turnrightfast := 5
TERM turnright := 1
TERM stay := 0.0
TERM turnleft := -1
TERM turnleftfast := -5
END_DEFUZZIFY

RULEBLOCK 6
RULE 1: if angle_target_Bip01$R$UpperArm@1 is farleft then dangle_Bip01$R$UpperArm@1 is turnrightfast
RULE 2: if angle_target_Bip01$R$UpperArm@1 is left then dangle_Bip01$R$UpperArm@1 is turnright
RULE 3: if angle_target_Bip01$R$UpperArm@1 is at then dangle_Bip01$R$UpperArm@1 is stay
RULE 4: if angle_target_Bip01$R$UpperArm@1 is right then dangle_Bip01$R$UpperArm@1 is turnleft
RULE 5: if angle_target_Bip01$R$UpperArm@1 is farright then dangle_Bip01$R$UpperArm@1 is turnleftfast
END_RULEBLOCK

RULEBLOCK 5
RULE 4: if angle_current_Bip01$R$UpperArm@2 is left then dangle_Bip01$R$UpperArm@2 is turnright
RULE 4: if angle_current_Bip01$R$UpperArm@2 is at && angle_target_Bip01$R$UpperArm@2 is left then dangle_Bip01$R$UpperArm@2 is turnrighttslow
RULE 4: if angle_current_Bip01$R$UpperArm@2 is at && angle_target_Bip01$R$UpperArm@2 is right then dangle_Bip01$R$UpperArm@2 is turnleftslow
RULE 4: if angle_current_Bip01$R$UpperArm@2 is at && angle_target_Bip01$R$UpperArm@2 is at then dangle_Bip01$R$UpperArm@2 is stay
RULE 5: if angle_current_Bip01$R$UpperArm@2 is right then dangle_Bip01$R$UpperArm@2 is turnleft
END_RULEBLOCK

RULEBLOCK 6
RULE 1: if angle_target_RightShoulderJointZ is farleft then dangle_RightShoulderJointZ is turnrightfast
RULE 2: if angle_target_RightShoulderJointZ is left then dangle_RightShoulderJointZ is turnright
RULE 3: if angle_target_RightShoulderJointZ is at then dangle_RightShoulderJointZ is stay
RULE 4: if angle_target_RightShoulderJointZ is right then dangle_RightShoulderJointZ is turnleft
RULE 5: if angle_target_RightShoulderJointZ is farright then dangle_RightShoulderJointZ is turnleftfast
END_RULEBLOCK

RULEBLOCK 4
RULE 1: if angle_target_Bip01$R$Forearm is farleft then dangle_Bip01$R$Forearm is turnrightfast
RULE 2: if angle_target_Bip01$R$Forearm is left then dangle_Bip01$R$Forearm is turnright
RULE 3: if angle_target_Bip01$R$Forearm is at then dangle_Bip01$R$Forearm is stay
RULE 4: if angle_target_Bip01$R$Forearm is right then dangle_Bip01$R$Forearm is turnleft
RULE 5: if angle_target_Bip01$R$Forearm is farright then dangle_Bip01$R$Forearm is turnleftfast
END_RULEBLOCK

RULEBLOCK 7
RULE 1: if angle_alignment2_rightForeArmJointX is farleft   then dangle_rightForeArmJointX is turnrightfast
RULE 2: if angle_alignment2_rightForeArmJointX is left      then dangle_rightForeArmJointX is turnright
RULE 3: if angle_alignment2_rightForeArmJointX is at        then dangle_rightForeArmJointX is stay
RULE 4: if angle_alignment2_rightForeArmJointX is right     then dangle_rightForeArmJointX is turnleft
RULE 5: if angle_alignment2_rightForeArmJointX is farright  then dangle_rightForeArmJointX is turnleftfast
END_RULEBLOCK

RULEBLOCK 2
RULE 1: if angle_alignment2_Bip01$R$Hand is farleft then dangle_Bip01$R$Hand is turnrightfast
RULE 2: if angle_alignment2_Bip01$R$Hand is left then dangle_Bip01$R$Hand is turnright
RULE 3: if angle_alignment2_Bip01$R$Hand is at then dangle_Bip01$R$Hand is stay
RULE 4: if angle_alignment2_Bip01$R$Hand is right then dangle_Bip01$R$Hand is turnleft
RULE 5: if angle_alignment2_Bip01$R$Hand is farright then dangle_Bip01$R$Hand is turnleftfast
END_RULEBLOCK

RULEBLOCK 1
RULE 1: if angle_alignment1_rightWristJointY is farleft then dangle_rightWristJointY is turnrightfast
RULE 2: if angle_alignment1_rightWristJointY is left then dangle_rightWristJointY is turnright
RULE 3: if angle_alignment1_rightWristJointY is at then dangle_rightWristJointY is stay
RULE 4: if angle_alignment1_rightWristJointY is right then dangle_rightWristJointY is turnleft
RULE 5: if angle_alignment1_rightWristJointY is farright then dangle_rightWristJointY is turnleftfast
END_RULEBLOCK

RULEBLOCK 8
RULE 1: if angle_target_Bip01$Spine1@1 is farleft then dangle_Bip01$Spine1@1 is turnrightfast
RULE 2: if angle_target_Bip01$Spine1@1 is left then dangle_Bip01$Spine1@1 is turnright
RULE 3: if angle_target_Bip01$Spine1@1 is at then dangle_Bip01$Spine1@1 is stay
RULE 4: if angle_target_Bip01$Spine1@1 is right then dangle_Bip01$Spine1@1 is turnleft
RULE 5: if angle_target_Bip01$Spine1@1 is farright then dangle_Bip01$Spine1@1 is turnleftfast

RULE 1: if angle_target_Bip01$Spine1@2 is farleft then dangle_Bip01$Spine1@2 is turnrightfast
RULE 2: if angle_target_Bip01$Spine1@2 is left then dangle_Bip01$Spine1@2 is turnright
RULE 3: if angle_target_Bip01$Spine1@2 is at then dangle_Bip01$Spine1@2 is stay
RULE 4: if angle_target_Bip01$Spine1@2 is right then dangle_Bip01$Spine1@2 is turnleft
RULE 5: if angle_target_Bip01$Spine1@2 is farright then dangle_Bip01$Spine1@2 is turnleftfast
END_RULEBLOCK

RULEBLOCK 10
RULE 1: if angle_target_Bip01$Neck@1 is farleft then dangle_Bip01$Neck@1 is turnrightfast
RULE 2: if angle_target_Bip01$Neck@1 is left then dangle_Bip01$Neck@1 is turnright
RULE 3: if angle_target_Bip01$Neck@1 is at then dangle_Bip01$Neck@1 is stay
RULE 4: if angle_target_Bip01$Neck@1 is right then dangle_Bip01$Neck@1 is turnleft
RULE 5: if angle_target_Bip01$Neck@1 is farright then dangle_Bip01$Neck@1 is turnleftfast

RULE 1: if angle_target_Bip01$Neck@2 is farleft then dangle_Bip01$Neck@2 is turnrightfast
RULE 2: if angle_target_Bip01$Neck@2 is left then dangle_Bip01$Neck@2 is turnright
RULE 3: if angle_target_Bip01$Neck@2 is at then dangle_Bip01$Neck@2 is stay
RULE 4: if angle_target_Bip01$Neck@2 is right then dangle_Bip01$Neck@2 is turnleft
RULE 5: if angle_target_Bip01$Neck@2 is farright then dangle_Bip01$Neck@2 is turnleftfast
END_RULEBLOCK

RULEBLOCK 9
RULE 1: if angle_target_Bip01$R$Clavicle@1 is farleft then dangle_Bip01$R$Clavicle@1 is turnrightfast
RULE 2: if angle_target_Bip01$R$Clavicle@1 is left then dangle_Bip01$R$Clavicle@1 is turnright
RULE 3: if angle_target_Bip01$R$Clavicle@1 is at then dangle_Bip01$R$Clavicle@1 is stay
RULE 4: if angle_target_Bip01$R$Clavicle@1 is right then dangle_Bip01$R$Clavicle@1 is turnleft
RULE 5: if angle_target_Bip01$R$Clavicle@1 is farright then dangle_Bip01$R$Clavicle@1 is turnleftfast

RULE 6: if angle_target_Bip01$R$Clavicle@2 is farleft then dangle_Bip01$R$Clavicle@2 is turnrightfast
RULE 7: if angle_target_Bip01$R$Clavicle@2 is left then dangle_Bip01$R$Clavicle@2 is turnright
RULE 8: if angle_target_Bip01$R$Clavicle@2 is at then dangle_Bip01$R$Clavicle@2 is stay
RULE 5: if angle_target_Bip01$R$Clavicle@2 is right then dangle_Bip01$R$Clavicle@2 is turnleft
RULE 5: if angle_target_Bip01$R$Clavicle@2 is farright then dangle_Bip01$R$Clavicle@2 is turnleftfast
END_RULEBLOCK
END_FUNCTIONBLOCK