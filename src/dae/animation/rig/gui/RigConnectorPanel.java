/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dae.animation.rig.gui;

import dae.animation.rig.AnimationController;
import dae.animation.rig.AnimationListControl;
import dae.animation.rig.Rig;

/**
 *
 * @author Koen Samyn
 */
public class RigConnectorPanel extends javax.swing.JPanel {

    private Rig rig;
    private AnimationControllerListModel listModel;
    private Object currentSelection;

    /**
     * Creates new form RigConnectorPanel
     */
    public RigConnectorPanel() {
        initComponents();
    }

    /**
     * Sets the rig to edit.
     *
     * @param rig the rig to edit.
     */
    public void setRig(Rig rig) {
        this.rig = rig;
        inputConnectorPanel1.setRig(rig);
        outputConnectorPanel1.setRig(rig);
        controllerConnector1.setRig(rig);

        AnimationListControl alc = rig.getControl(AnimationListControl.class);
        if (alc == null) {
            alc = new AnimationListControl();
            rig.addControl(alc);
        }
        listModel = new AnimationControllerListModel(alc);
        lstConnectors.setModel(listModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        scrConnectors = new javax.swing.JScrollPane();
        lstConnectors = new javax.swing.JList();
        btnAddConnector = new javax.swing.JButton();
        btnDeleteConnector = new javax.swing.JButton();
        inputConnectorPanel1 = new dae.animation.rig.gui.InputConnectorPanel();
        lblFiller = new javax.swing.JLabel();
        outputConnectorPanel1 = new dae.animation.rig.gui.OutputConnectorPanel();
        controllerConnector1 = new dae.animation.rig.gui.ControllerConnector();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        lstConnectors.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstConnectors.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstConnectors.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstConnectorsValueChanged(evt);
            }
        });
        scrConnectors.setViewportView(lstConnectors);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(scrConnectors, gridBagConstraints);

        btnAddConnector.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dae/icons/add.png"))); // NOI18N
        btnAddConnector.setToolTipText("Add connector");
        btnAddConnector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddConnectorActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(btnAddConnector, gridBagConstraints);

        btnDeleteConnector.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dae/icons/delete.png"))); // NOI18N
        btnDeleteConnector.setEnabled(false);
        btnDeleteConnector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteConnectorActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(btnDeleteConnector, gridBagConstraints);

        inputConnectorPanel1.setMinimumSize(new java.awt.Dimension(200, 70));
        inputConnectorPanel1.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        add(inputConnectorPanel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.2;
        add(lblFiller, gridBagConstraints);

        outputConnectorPanel1.setMinimumSize(new java.awt.Dimension(200, 70));
        outputConnectorPanel1.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        add(outputConnectorPanel1, gridBagConstraints);

        controllerConnector1.setMinimumSize(null);
        controllerConnector1.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        add(controllerConnector1, gridBagConstraints);

        jLabel1.setText("Animation controllers");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLabel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddConnectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddConnectorActionPerformed
        AnimationListControl alc = rig.getControl(AnimationListControl.class);
        String newName = alc.generateNewName("controller");
        AnimationController ac = new AnimationController(newName);
        listModel.add(ac);

    }//GEN-LAST:event_btnAddConnectorActionPerformed

    private void btnDeleteConnectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteConnectorActionPerformed
        AnimationController selected = (AnimationController) lstConnectors.getSelectedValue();
        if (selected != null) {
            int selectedIndex = lstConnectors.getSelectedIndex();
            lstConnectors.removeSelectionInterval(selectedIndex, selectedIndex);
            listModel.remove(selected);
            if (selectedIndex == listModel.getSize()) {
                selectedIndex -= 1;
            }
            lstConnectors.setSelectedIndex(selectedIndex);
        }
    }//GEN-LAST:event_btnDeleteConnectorActionPerformed

    private void lstConnectorsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstConnectorsValueChanged

        Object selected = lstConnectors.getSelectedValue();
        if (selected == this.currentSelection) {
            return;
        } else {
            currentSelection = selected;
            btnDeleteConnector.setEnabled(selected != null);
            if (selected instanceof AnimationController) {
                AnimationController ac = (AnimationController) selected;
                inputConnectorPanel1.setAnimationController(ac);
                outputConnectorPanel1.setAnimationController(ac);
                controllerConnector1.setAnimationController(ac);
            }
        }

    }//GEN-LAST:event_lstConnectorsValueChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddConnector;
    private javax.swing.JButton btnDeleteConnector;
    private dae.animation.rig.gui.ControllerConnector controllerConnector1;
    private dae.animation.rig.gui.InputConnectorPanel inputConnectorPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblFiller;
    private javax.swing.JList lstConnectors;
    private dae.animation.rig.gui.OutputConnectorPanel outputConnectorPanel1;
    private javax.swing.JScrollPane scrConnectors;
    // End of variables declaration//GEN-END:variables
}
