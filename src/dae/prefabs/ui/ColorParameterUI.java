/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dae.prefabs.ui;

import com.jme3.math.ColorRGBA;
import com.jme3.math.FastMath;
import dae.prefabs.Prefab;
import dae.prefabs.parameters.ColorParameter;
import dae.prefabs.parameters.Parameter;
import java.awt.Color;
import javax.swing.JColorChooser;

import dae.prefabs.standard.UpdateObject;

/**
 *
 * @author Koen
 */
public class ColorParameterUI extends javax.swing.JPanel implements ParameterUI {

    private ColorRGBA color;
    private Prefab currentNode;
    private ColorParameter parameter;

    /**
     * Creates new form ColorParameterUI
     */
    public ColorParameterUI() {
        initComponents();
    }

    public void setColor(ColorRGBA color) {
        this.color = color;
        float r = FastMath.clamp(color.r,0,1);
        float g = FastMath.clamp(color.g,0,1);
        float b = FastMath.clamp(color.b,0,1);
        lblColor.setBackground(new Color(r,g,b));
    }

    public ColorRGBA getColor() {
        return color;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblLabel = new javax.swing.JLabel();
        lblColor = new javax.swing.JLabel();
        btnChangeColor = new javax.swing.JButton();

        setPreferredSize(null);
        setLayout(new java.awt.GridBagLayout());

        lblLabel.setText(" Color :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 10, 0, 0);
        add(lblLabel, gridBagConstraints);

        lblColor.setBackground(new java.awt.Color(0, 0, 0));
        lblColor.setMaximumSize(new java.awt.Dimension(50, 16));
        lblColor.setMinimumSize(new java.awt.Dimension(50, 16));
        lblColor.setOpaque(true);
        lblColor.setPreferredSize(new java.awt.Dimension(50, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(12, 3, 1, 3);
        add(lblColor, gridBagConstraints);

        btnChangeColor.setText("...");
        btnChangeColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeColorActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 3);
        add(btnChangeColor, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btnChangeColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeColorActionPerformed
        // TODO add your handling code here:
        Color newColor = JColorChooser.showDialog(
                this,
                "Choose Background Color",
                new Color(color.r, color.g, color.b));
        if (newColor != null) {
            float[] cs = newColor.getRGBComponents(null);
            this.color = new ColorRGBA(cs[0], cs[1], cs[2], cs[3]);
            lblColor.setBackground(new Color(color.r, color.g, color.b));
            if (currentNode != null) {
                //System.out.println("Setting " + property + " to " + value);
                currentNode.addUpdateObject(new UpdateObject(parameter.getId(), color, true));
            }
        }
    }//GEN-LAST:event_btnChangeColorActionPerformed

    @Override
    public void setParameter(Parameter p) {
        parameter = (ColorParameter) p;
    }

    @Override
    public void setNode(Prefab currentSelectedNode) {
        currentNode = currentSelectedNode;
        if (currentNode == null) {
            return;
        }
        String property = parameter.getId();
        Object value = currentSelectedNode.getParameter(property);
        if (value != null && value instanceof ColorRGBA) {
            this.setColor((ColorRGBA) value);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChangeColor;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblLabel;
    // End of variables declaration//GEN-END:variables

    public void setLabel(String id) {
        lblLabel.setText(id);
    }
}
