package dae.prefabs.ui.collection;

import dae.prefabs.Prefab;
import dae.prefabs.parameters.DictionaryParameter;
import dae.prefabs.parameters.Parameter;
import dae.prefabs.ui.ParameterUI;
import dae.prefabs.ui.collection.editor.PrefabCellEditor;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 * This class allows the user to define a property with a HashMap as backing
 * store. A concrete example of this usage is the linking of spatials to a rig
 * as target. A rig might have multiple targets, and it is useful to have access
 * to those targets in a straightforward manner. For example a gun turret might
 * have an enemy as target, and the enemy is made accesible from within the rig
 * as "Enemy". Users of the rig can then set the target by invoking :
 * setTarget("Enemy",enemySpatial);
 *
 * In order for this user interface to work, the following methods have to
 * present in the prefab,
 *
 * void addPropertyKey( String key ); void removePropertyKey( String key );
 *
 * void setProperty( String key, T value); T getProperty( String key );
 *
 * The animation controllers can then use this target for calculations.
 *
 * @author Koen Samyn
 */
public class DictionaryParameterUI extends javax.swing.JPanel implements ParameterUI, DocumentListener, ListSelectionListener {

    private DictionaryParameter parameter;
    private Prefab currentPrefab;
    private DictionaryTableModel tableModel;

    /**
     * Creates new form DictionaryParameterUI
     */
    public DictionaryParameterUI() {
        initComponents();
        txtNewKey.getDocument().addDocumentListener(this);
        tblDictionary.getSelectionModel().addListSelectionListener(this);
        
        tblDictionary.setDefaultEditor(Prefab.class, new PrefabCellEditor());
    }

    /**
     * Sets the parameter of this DictionaryParameterUI.
     *
     * @param p
     */
    public void setParameter(Parameter p) {
        parameter = (DictionaryParameter) p;
    }

    /**
     * Sets the current selected node.
     *
     * @param currentSelectedNode the node to show in the user interface.
     */
    public void setNode(Prefab currentSelectedNode) {
        currentPrefab = currentSelectedNode;
        lblPropertyName.setText(parameter.getProperty());
        tableModel = new DictionaryTableModel(currentPrefab, parameter);
        tblDictionary.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnAddKey = new javax.swing.JButton();
        txtNewKey = new dae.gui.components.AlphaNumericTextField();
        lblPropertyName = new javax.swing.JLabel();
        scrDictionary = new javax.swing.JScrollPane();
        tblDictionary = new javax.swing.JTable();
        btnDeleteKey = new javax.swing.JButton();
        lblAddKey = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        btnAddKey.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dae/icons/add.png"))); // NOI18N
        btnAddKey.setToolTipText("Add key");
        btnAddKey.setEnabled(false);
        btnAddKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddKeyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 4, 2);
        add(btnAddKey, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 176;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 4, 2);
        add(txtNewKey, gridBagConstraints);

        lblPropertyName.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 4, 0);
        add(lblPropertyName, gridBagConstraints);

        scrDictionary.setMinimumSize(new java.awt.Dimension(23, 100));
        scrDictionary.setPreferredSize(new java.awt.Dimension(100, 100));

        tblDictionary.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDictionary.setTableHeader(null);
        scrDictionary.setViewportView(tblDictionary);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        add(scrDictionary, gridBagConstraints);

        btnDeleteKey.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dae/icons/delete.png"))); // NOI18N
        btnDeleteKey.setToolTipText("Remove key");
        btnDeleteKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteKeyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(2, 6, 4, 2);
        add(btnDeleteKey, gridBagConstraints);

        lblAddKey.setText("Add key :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 4, 2);
        add(lblAddKey, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    public void insertUpdate(DocumentEvent e) {
        checkKey();
    }

    public void removeUpdate(DocumentEvent e) {
        checkKey();
    }

    public void changedUpdate(DocumentEvent e) {
        checkKey();
    }

    private void checkKey() {
        String key = txtNewKey.getText();
        if (key.length() == 0) {
            btnAddKey.setEnabled(false);
        }
        int index = parameter.getIndexOfKey(currentPrefab, key);
        // key should not exist
        btnAddKey.setEnabled(index == -1);
    }

    /**
     * The value for the selection has changed.
     *
     * @param e the list selection event.
     */
    public void valueChanged(ListSelectionEvent e) {
        btnDeleteKey.setEnabled(tblDictionary.getSelectedRow() > -1);
    }

    private void btnAddKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddKeyActionPerformed
        tableModel.addPropertyKey(txtNewKey.getText());
        txtNewKey.setText("");
    }//GEN-LAST:event_btnAddKeyActionPerformed

    private void btnDeleteKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteKeyActionPerformed
        int selectedRow = tblDictionary.getSelectedRow();
        if ( selectedRow > -1 ){
            String key = parameter.getKeyAt(currentPrefab, selectedRow);
            tableModel.removePropertyKey(key);
        }
    }//GEN-LAST:event_btnDeleteKeyActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddKey;
    private javax.swing.JButton btnDeleteKey;
    private javax.swing.JLabel lblAddKey;
    private javax.swing.JLabel lblPropertyName;
    private javax.swing.JScrollPane scrDictionary;
    private javax.swing.JTable tblDictionary;
    private dae.gui.components.AlphaNumericTextField txtNewKey;
    // End of variables declaration//GEN-END:variables
}
