/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dae.gui.fuzzy;

import dae.gui.fuzzy.model.FuzzyRuleBlockListModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import mlproject.fuzzy.FuzzyRule;
import mlproject.fuzzy.FuzzyRuleBlock;
import mlproject.fuzzy.FuzzySystem;

/**
 *
 * @author Koen Samyn
 */
public class RuleBlockPanel extends javax.swing.JPanel implements DocumentListener {

    private FuzzyRuleBlockListModel ruleBlockModel;
    private FuzzySystem system;
    private FuzzyRuleBlock currentRuleBlock;

    /**
     * Creates new form RuleBlockPanel
     */
    public RuleBlockPanel() {
        initComponents();
    }

    public void setFuzzySystem(FuzzySystem system) {
        this.system = system;
        ruleBlockModel = new FuzzyRuleBlockListModel(system);
        lstRuleBlocks.setModel(ruleBlockModel);

        txtRuleList.getDocument().addDocumentListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrRuleBlocks = new javax.swing.JScrollPane();
        lstRuleBlocks = new javax.swing.JList();
        btnAddRuleBlock = new javax.swing.JButton();
        btnDeleteRuleBlock = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        scrRules = new javax.swing.JScrollPane();
        txtRuleList = new javax.swing.JTextPane();

        setPreferredSize(new java.awt.Dimension(800, 320));

        lstRuleBlocks.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstRuleBlocks.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstRuleBlocksValueChanged(evt);
            }
        });
        scrRuleBlocks.setViewportView(lstRuleBlocks);

        btnAddRuleBlock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dae/icons/add.png"))); // NOI18N
        btnAddRuleBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRuleBlockActionPerformed(evt);
            }
        });

        btnDeleteRuleBlock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dae/icons/delete.png"))); // NOI18N
        btnDeleteRuleBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRuleBlockActionPerformed(evt);
            }
        });

        jLabel1.setText("Rules :");

        jLabel2.setText("Rule blocks :");

        scrRules.setViewportView(txtRuleList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(scrRuleBlocks, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnDeleteRuleBlock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddRuleBlock)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 446, Short.MAX_VALUE))
                    .addComponent(scrRules))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrRuleBlocks, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                    .addComponent(scrRules))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddRuleBlock, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDeleteRuleBlock, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddRuleBlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRuleBlockActionPerformed
        // TODO add your handling code here:

        FuzzyRuleBlock rb = new FuzzyRuleBlock(system, "block" + system.getNrOfRuleBlocks() + 1);
        ruleBlockModel.addRuleBlock(rb);
    }//GEN-LAST:event_btnAddRuleBlockActionPerformed

    private void btnDeleteRuleBlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRuleBlockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteRuleBlockActionPerformed

    private void lstRuleBlocksValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstRuleBlocksValueChanged
        // TODO add your handling code here:
        FuzzyRuleBlock ruleBlock = (FuzzyRuleBlock) lstRuleBlocks.getSelectedValue();
        StringBuilder text = new StringBuilder();
        for (FuzzyRule rule : ruleBlock.getRules()) {
            text.append(rule.getRuleText());
            text.append("\n");
        }
        txtRuleList.getDocument().removeDocumentListener(this);
        txtRuleList.setText(text.toString());
        txtRuleList.getDocument().addDocumentListener(this);
        currentRuleBlock = ruleBlock;
    }//GEN-LAST:event_lstRuleBlocksValueChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRuleBlock;
    private javax.swing.JButton btnDeleteRuleBlock;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList lstRuleBlocks;
    private javax.swing.JScrollPane scrRuleBlocks;
    private javax.swing.JScrollPane scrRules;
    private javax.swing.JTextPane txtRuleList;
    // End of variables declaration//GEN-END:variables

    public void insertUpdate(DocumentEvent e) {
        System.out.println("Insert update!");
        updateRules();
    }

    public void removeUpdate(DocumentEvent e) {
        System.out.println("Remove update!");
        updateRules();
    }

    public void changedUpdate(DocumentEvent e) {
        System.out.println("Changed update");
        updateRules();
    }

    private void updateRules() {
        if (currentRuleBlock != null) {
            currentRuleBlock.clear();
            String[] text = txtRuleList.getText().split("[\\r\\n]+");
            for (String line : text) {
                FuzzyRule rule = new FuzzyRule(line);
                if (rule.isParsed()) {
                    System.out.println("Adding rule to block: " + line);
                    currentRuleBlock.addFuzzyRule(rule);
                } else {
                    System.out.println("Parse error:" + rule.getParseError());
                }
            }
        }
    }
}
